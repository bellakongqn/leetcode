/**
 * 给定一个非负整数数组 A， A 中一半整数是奇数，一半整数是偶数。
    对数组进行排序，以便当 A[i] 为奇数时，i 也是奇数；当 A[i] 为偶数时， i 也是偶数。
    你可以返回任何满足上述条件的数组作为答案。
    示例：
    输入：[4,2,5,7]
    输出：[4,5,2,7]
    解释：[4,7,2,5]，[2,5,4,7]，[2,7,4,5] 也会被接受。

    解析：
    当发现偶数部分下标对应的值不是偶数时，不断增加指向奇数部分的指针，直到找到一个偶数，然后交换指针 i，j 所指的数。
*/
var sortArrayByParityII = function(A) {
    let i = 0,
        j = 1;
    for(; i < A.length; i += 2){
        if(A[i] % 2 == 0)continue;//当A[i] % 2 == 1时会到下面的while循环看j
        while(A[j] % 2 == 1)j += 2;
        [A[i],A[j]]=[A[j],A[i]];//ES6在引入了数组解构的概念，值互换会变得更加方便
    }
    return A;
}