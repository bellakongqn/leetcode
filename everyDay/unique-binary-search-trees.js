/**
 * 96. 不同的二叉搜索树
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？
示例:
输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:
   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
 */
/*
每一个树的构成都可以分为左子树和右子树，
所以以i为根节点的二叉搜索树种类的个数可以分解为子问题：左子树的种类 乘 右子树的种类。
左子树的节点范围为：1...i-1。
右子树的节点范围为：i+1...n。
那么就可以把同样的问题转接到左子树和有字数上。
时间复杂度：O(n²)
空间复杂度：O(n)
 */ 
/**
 * @param {number} n
 * @return {number}
 */
var numTrees = function(n) {
    const G = new Array(n + 1).fill(0);
    G[0] = 1;
    G[1] = 1;

    for (let i = 2; i <= n; ++i) {
        for (let j = 1; j <= i; ++j) {
            G[i] += G[j - 1] * G[i - j];
        }
    }
    return G[n];
};
